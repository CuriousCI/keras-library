<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2134" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2117.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2117.00"> </text><svg id="frames" x="10" width="1180" total_samples="7054"><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.03%)</title><rect x="0.0000%" y="2053" width="0.0284%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2063.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.0284%" y="2053" width="0.0142%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.2784%" y="2063.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (18 samples, 0.26%)</title><rect x="0.0425%" y="2053" width="0.2552%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="18"/><text x="0.2925%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (164 samples, 2.32%)</title><rect x="0.2977%" y="2053" width="2.3249%" height="15" fill="rgb(248,212,6)" fg:x="21" fg:w="164"/><text x="0.5477%" y="2063.50">&lt;..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.6084%" y="2037" width="0.0142%" height="15" fill="rgb(208,68,35)" fg:x="184" fg:w="1"/><text x="2.8584%" y="2047.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_end (2 samples, 0.03%)</title><rect x="2.6226%" y="2053" width="0.0284%" height="15" fill="rgb(232,128,0)" fg:x="185" fg:w="2"/><text x="2.8726%" y="2063.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="2.6510%" y="2053" width="0.0425%" height="15" fill="rgb(207,160,47)" fg:x="187" fg:w="3"/><text x="2.9010%" y="2063.50"></text></g><g><title>&lt;std::path::Components as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="2.6935%" y="2053" width="0.0284%" height="15" fill="rgb(228,23,34)" fg:x="190" fg:w="2"/><text x="2.9435%" y="2063.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (11 samples, 0.16%)</title><rect x="2.7219%" y="2053" width="0.1559%" height="15" fill="rgb(218,30,26)" fg:x="192" fg:w="11"/><text x="2.9719%" y="2063.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.06%)</title><rect x="2.8778%" y="2037" width="0.0567%" height="15" fill="rgb(220,122,19)" fg:x="203" fg:w="4"/><text x="3.1278%" y="2047.50"></text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="2.9345%" y="2037" width="0.0142%" height="15" fill="rgb(250,228,42)" fg:x="207" fg:w="1"/><text x="3.1845%" y="2047.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="2.9487%" y="2037" width="0.0142%" height="15" fill="rgb(240,193,28)" fg:x="208" fg:w="1"/><text x="3.1987%" y="2047.50"></text></g><g><title>&lt;std::thread::Packet&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.9629%" y="2037" width="0.0142%" height="15" fill="rgb(216,20,37)" fg:x="209" fg:w="1"/><text x="3.2129%" y="2047.50"></text></g><g><title>&lt;std::sys::unix::thread::Thread as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.9770%" y="2021" width="0.0142%" height="15" fill="rgb(206,188,39)" fg:x="210" fg:w="1"/><text x="3.2270%" y="2031.50"></text></g><g><title>__GI___clone_internal (1 samples, 0.01%)</title><rect x="2.9912%" y="37" width="0.0142%" height="15" fill="rgb(217,207,13)" fg:x="211" fg:w="1"/><text x="3.2412%" y="47.50"></text></g><g><title>__GI___nptl_deallocate_stack (19 samples, 0.27%)</title><rect x="3.0054%" y="37" width="0.2694%" height="15" fill="rgb(231,73,38)" fg:x="212" fg:w="19"/><text x="3.2554%" y="47.50"></text></g><g><title>__lll_lock_wait_private (230 samples, 3.26%)</title><rect x="3.2747%" y="37" width="3.2606%" height="15" fill="rgb(225,20,46)" fg:x="231" fg:w="230"/><text x="3.5247%" y="47.50">__l..</text></g><g><title>__munmap (19 samples, 0.27%)</title><rect x="6.5353%" y="37" width="0.2694%" height="15" fill="rgb(210,31,41)" fg:x="461" fg:w="19"/><text x="6.7853%" y="47.50"></text></g><g><title>__nptl_free_stacks (4 samples, 0.06%)</title><rect x="6.8046%" y="37" width="0.0567%" height="15" fill="rgb(221,200,47)" fg:x="480" fg:w="4"/><text x="7.0546%" y="47.50"></text></g><g><title>_dl_deallocate_tls (7 samples, 0.10%)</title><rect x="6.8614%" y="37" width="0.0992%" height="15" fill="rgb(226,26,5)" fg:x="484" fg:w="7"/><text x="7.1114%" y="47.50"></text></g><g><title>[unknown] (2,135 samples, 30.27%)</title><rect x="2.9912%" y="53" width="30.2665%" height="15" fill="rgb(249,33,26)" fg:x="211" fg:w="2135"/><text x="3.2412%" y="63.50">[unknown]</text></g><g><title>clone3 (1,855 samples, 26.30%)</title><rect x="6.9606%" y="37" width="26.2971%" height="15" fill="rgb(235,183,28)" fg:x="491" fg:w="1855"/><text x="7.2106%" y="47.50">clone3</text></g><g><title>__lll_lock_wait_private (9 samples, 0.13%)</title><rect x="33.2577%" y="53" width="0.1276%" height="15" fill="rgb(221,5,38)" fg:x="2346" fg:w="9"/><text x="33.5077%" y="63.50"></text></g><g><title>[unknown] (9 samples, 0.13%)</title><rect x="33.2577%" y="37" width="0.1276%" height="15" fill="rgb(247,18,42)" fg:x="2346" fg:w="9"/><text x="33.5077%" y="47.50"></text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1941" width="31.4006%" height="15" fill="rgb(241,131,45)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1951.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1925" width="31.4006%" height="15" fill="rgb(249,31,29)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1935.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1909" width="31.4006%" height="15" fill="rgb(225,111,53)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1919.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1893" width="31.4006%" height="15" fill="rgb(238,160,17)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1903.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1877" width="31.4006%" height="15" fill="rgb(214,148,48)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1887.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1861" width="31.4006%" height="15" fill="rgb(232,36,49)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1871.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1845" width="31.4006%" height="15" fill="rgb(209,103,24)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1855.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1829" width="31.4006%" height="15" fill="rgb(229,88,8)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1839.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1813" width="31.4006%" height="15" fill="rgb(213,181,19)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1823.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1797" width="31.4006%" height="15" fill="rgb(254,191,54)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1807.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1781" width="31.4006%" height="15" fill="rgb(241,83,37)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1791.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1765" width="31.4006%" height="15" fill="rgb(233,36,39)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1775.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1749" width="31.4006%" height="15" fill="rgb(226,3,54)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1759.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1733" width="31.4006%" height="15" fill="rgb(245,192,40)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1743.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1717" width="31.4006%" height="15" fill="rgb(238,167,29)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1727.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1701" width="31.4006%" height="15" fill="rgb(232,182,51)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1711.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1685" width="31.4006%" height="15" fill="rgb(231,60,39)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1695.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1669" width="31.4006%" height="15" fill="rgb(208,69,12)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1679.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1653" width="31.4006%" height="15" fill="rgb(235,93,37)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1663.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1637" width="31.4006%" height="15" fill="rgb(213,116,39)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1647.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1621" width="31.4006%" height="15" fill="rgb(222,207,29)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1631.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1605" width="31.4006%" height="15" fill="rgb(206,96,30)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1615.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1589" width="31.4006%" height="15" fill="rgb(218,138,4)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1599.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1573" width="31.4006%" height="15" fill="rgb(250,191,14)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1583.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1557" width="31.4006%" height="15" fill="rgb(239,60,40)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1567.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1541" width="31.4006%" height="15" fill="rgb(206,27,48)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1551.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1525" width="31.4006%" height="15" fill="rgb(225,35,8)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1535.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1509" width="31.4006%" height="15" fill="rgb(250,213,24)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1519.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1493" width="31.4006%" height="15" fill="rgb(247,123,22)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1503.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1477" width="31.4006%" height="15" fill="rgb(231,138,38)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1487.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1461" width="31.4006%" height="15" fill="rgb(231,145,46)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1471.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1445" width="31.4006%" height="15" fill="rgb(251,118,11)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1455.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1429" width="31.4006%" height="15" fill="rgb(217,147,25)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1439.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1413" width="31.4006%" height="15" fill="rgb(247,81,37)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1423.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1397" width="31.4006%" height="15" fill="rgb(209,12,38)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1407.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1381" width="31.4006%" height="15" fill="rgb(227,1,9)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1391.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1365" width="31.4006%" height="15" fill="rgb(248,47,43)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1375.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1349" width="31.4006%" height="15" fill="rgb(221,10,30)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1359.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1333" width="31.4006%" height="15" fill="rgb(210,229,1)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1343.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1317" width="31.4006%" height="15" fill="rgb(222,148,37)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1327.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1301" width="31.4006%" height="15" fill="rgb(234,67,33)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1311.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1285" width="31.4006%" height="15" fill="rgb(247,98,35)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1295.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1269" width="31.4006%" height="15" fill="rgb(247,138,52)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1279.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1253" width="31.4006%" height="15" fill="rgb(213,79,30)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1263.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1237" width="31.4006%" height="15" fill="rgb(246,177,23)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1247.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1221" width="31.4006%" height="15" fill="rgb(230,62,27)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1231.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1205" width="31.4006%" height="15" fill="rgb(216,154,8)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1215.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1189" width="31.4006%" height="15" fill="rgb(244,35,45)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1199.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1173" width="31.4006%" height="15" fill="rgb(251,115,12)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1183.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1157" width="31.4006%" height="15" fill="rgb(240,54,50)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1167.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1141" width="31.4006%" height="15" fill="rgb(233,84,52)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1151.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1125" width="31.4006%" height="15" fill="rgb(207,117,47)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1135.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1109" width="31.4006%" height="15" fill="rgb(249,43,39)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1119.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1093" width="31.4006%" height="15" fill="rgb(209,38,44)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1103.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1077" width="31.4006%" height="15" fill="rgb(236,212,23)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1087.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1061" width="31.4006%" height="15" fill="rgb(242,79,21)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1071.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1045" width="31.4006%" height="15" fill="rgb(211,96,35)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1055.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1029" width="31.4006%" height="15" fill="rgb(253,215,40)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1039.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="1013" width="31.4006%" height="15" fill="rgb(211,81,21)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1023.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="997" width="31.4006%" height="15" fill="rgb(208,190,38)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="1007.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="981" width="31.4006%" height="15" fill="rgb(235,213,38)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="991.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="965" width="31.4006%" height="15" fill="rgb(237,122,38)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="975.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="949" width="31.4006%" height="15" fill="rgb(244,218,35)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="959.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="933" width="31.4006%" height="15" fill="rgb(240,68,47)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="943.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="917" width="31.4006%" height="15" fill="rgb(210,16,53)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="927.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="901" width="31.4006%" height="15" fill="rgb(235,124,12)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="911.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="885" width="31.4006%" height="15" fill="rgb(224,169,11)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="895.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="869" width="31.4006%" height="15" fill="rgb(250,166,2)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="879.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="853" width="31.4006%" height="15" fill="rgb(242,216,29)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="863.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="837" width="31.4006%" height="15" fill="rgb(230,116,27)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="847.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="821" width="31.4006%" height="15" fill="rgb(228,99,48)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="831.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="805" width="31.4006%" height="15" fill="rgb(253,11,6)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="815.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="789" width="31.4006%" height="15" fill="rgb(247,143,39)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="799.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="773" width="31.4006%" height="15" fill="rgb(236,97,10)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="783.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="757" width="31.4006%" height="15" fill="rgb(233,208,19)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="767.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="741" width="31.4006%" height="15" fill="rgb(216,164,2)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="751.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="725" width="31.4006%" height="15" fill="rgb(220,129,5)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="735.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="709" width="31.4006%" height="15" fill="rgb(242,17,10)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="719.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="693" width="31.4006%" height="15" fill="rgb(242,107,0)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="703.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="677" width="31.4006%" height="15" fill="rgb(251,28,31)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="687.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="661" width="31.4006%" height="15" fill="rgb(233,223,10)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="671.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="645" width="31.4006%" height="15" fill="rgb(215,21,27)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="655.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="629" width="31.4006%" height="15" fill="rgb(232,23,21)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="639.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="613" width="31.4006%" height="15" fill="rgb(244,5,23)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="623.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="597" width="31.4006%" height="15" fill="rgb(226,81,46)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="607.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="581" width="31.4006%" height="15" fill="rgb(247,70,30)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="591.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="565" width="31.4006%" height="15" fill="rgb(212,68,19)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="575.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="549" width="31.4006%" height="15" fill="rgb(240,187,13)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="559.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="533" width="31.4006%" height="15" fill="rgb(223,113,26)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="543.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="517" width="31.4006%" height="15" fill="rgb(206,192,2)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="527.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="501" width="31.4006%" height="15" fill="rgb(241,108,4)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="511.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="485" width="31.4006%" height="15" fill="rgb(247,173,49)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="495.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="469" width="31.4006%" height="15" fill="rgb(224,114,35)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="479.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="453" width="31.4006%" height="15" fill="rgb(245,159,27)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="463.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="437" width="31.4006%" height="15" fill="rgb(245,172,44)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="447.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="421" width="31.4006%" height="15" fill="rgb(236,23,11)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="431.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="405" width="31.4006%" height="15" fill="rgb(205,117,38)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="415.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="389" width="31.4006%" height="15" fill="rgb(237,72,25)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="399.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="373" width="31.4006%" height="15" fill="rgb(244,70,9)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="383.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="357" width="31.4006%" height="15" fill="rgb(217,125,39)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="367.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="341" width="31.4006%" height="15" fill="rgb(235,36,10)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="351.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="325" width="31.4006%" height="15" fill="rgb(251,123,47)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="335.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="309" width="31.4006%" height="15" fill="rgb(221,13,13)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="319.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="293" width="31.4006%" height="15" fill="rgb(238,131,9)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="303.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="277" width="31.4006%" height="15" fill="rgb(211,50,8)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="287.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="261" width="31.4006%" height="15" fill="rgb(245,182,24)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="271.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="245" width="31.4006%" height="15" fill="rgb(242,14,37)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="255.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="229" width="31.4006%" height="15" fill="rgb(246,228,12)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="239.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="213" width="31.4006%" height="15" fill="rgb(213,55,15)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="223.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="197" width="31.4006%" height="15" fill="rgb(209,9,3)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="207.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="181" width="31.4006%" height="15" fill="rgb(230,59,30)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="191.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="165" width="31.4006%" height="15" fill="rgb(209,121,21)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="175.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="149" width="31.4006%" height="15" fill="rgb(220,109,13)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="159.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="133" width="31.4006%" height="15" fill="rgb(232,18,1)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="143.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="117" width="31.4006%" height="15" fill="rgb(215,41,42)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="127.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="101" width="31.4006%" height="15" fill="rgb(224,123,36)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="111.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="85" width="31.4006%" height="15" fill="rgb(240,125,3)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="95.50">[unknown]</text></g><g><title>[unknown] (2,215 samples, 31.40%)</title><rect x="2.9912%" y="69" width="31.4006%" height="15" fill="rgb(205,98,50)" fg:x="211" fg:w="2215"/><text x="3.2412%" y="79.50">[unknown]</text></g><g><title>clone3 (71 samples, 1.01%)</title><rect x="33.3853%" y="53" width="1.0065%" height="15" fill="rgb(205,185,37)" fg:x="2355" fg:w="71"/><text x="33.6353%" y="63.50"></text></g><g><title>[unknown] (71 samples, 1.01%)</title><rect x="33.3853%" y="37" width="1.0065%" height="15" fill="rgb(238,207,15)" fg:x="2355" fg:w="71"/><text x="33.6353%" y="47.50"></text></g><g><title>[unknown] (2,216 samples, 31.41%)</title><rect x="2.9912%" y="2005" width="31.4148%" height="15" fill="rgb(213,199,42)" fg:x="211" fg:w="2216"/><text x="3.2412%" y="2015.50">[unknown]</text></g><g><title>[unknown] (2,216 samples, 31.41%)</title><rect x="2.9912%" y="1989" width="31.4148%" height="15" fill="rgb(235,201,11)" fg:x="211" fg:w="2216"/><text x="3.2412%" y="1999.50">[unknown]</text></g><g><title>[unknown] (2,216 samples, 31.41%)</title><rect x="2.9912%" y="1973" width="31.4148%" height="15" fill="rgb(207,46,11)" fg:x="211" fg:w="2216"/><text x="3.2412%" y="1983.50">[unknown]</text></g><g><title>[unknown] (2,216 samples, 31.41%)</title><rect x="2.9912%" y="1957" width="31.4148%" height="15" fill="rgb(241,35,35)" fg:x="211" fg:w="2216"/><text x="3.2412%" y="1967.50">[unknown]</text></g><g><title>memcpy@GLIBC_2.2.5 (1 samples, 0.01%)</title><rect x="34.3918%" y="1941" width="0.0142%" height="15" fill="rgb(243,32,47)" fg:x="2426" fg:w="1"/><text x="34.6418%" y="1951.50"></text></g><g><title>__GI___lll_lock_wait (5 samples, 0.07%)</title><rect x="34.4060%" y="2005" width="0.0709%" height="15" fill="rgb(247,202,23)" fg:x="2427" fg:w="5"/><text x="34.6560%" y="2015.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (5 samples, 0.07%)</title><rect x="34.4769%" y="2005" width="0.0709%" height="15" fill="rgb(219,102,11)" fg:x="2432" fg:w="5"/><text x="34.7269%" y="2015.50"></text></g><g><title>__cxa_thread_atexit_impl (2 samples, 0.03%)</title><rect x="34.5478%" y="2005" width="0.0284%" height="15" fill="rgb(243,110,44)" fg:x="2437" fg:w="2"/><text x="34.7978%" y="2015.50"></text></g><g><title>__memmove_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="34.5761%" y="2005" width="0.0142%" height="15" fill="rgb(222,74,54)" fg:x="2439" fg:w="1"/><text x="34.8261%" y="2015.50"></text></g><g><title>_dl_find_dso_for_object (5 samples, 0.07%)</title><rect x="34.5903%" y="2005" width="0.0709%" height="15" fill="rgb(216,99,12)" fg:x="2440" fg:w="5"/><text x="34.8403%" y="2015.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2 samples, 0.03%)</title><rect x="34.6612%" y="2005" width="0.0284%" height="15" fill="rgb(226,22,26)" fg:x="2445" fg:w="2"/><text x="34.9112%" y="2015.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.01%)</title><rect x="34.6895%" y="2005" width="0.0142%" height="15" fill="rgb(217,163,10)" fg:x="2447" fg:w="1"/><text x="34.9395%" y="2015.50"></text></g><g><title>memcpy@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="34.7037%" y="2005" width="0.0284%" height="15" fill="rgb(213,25,53)" fg:x="2448" fg:w="2"/><text x="34.9537%" y="2015.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (10 samples, 0.14%)</title><rect x="34.7321%" y="2005" width="0.1418%" height="15" fill="rgb(252,105,26)" fg:x="2450" fg:w="10"/><text x="34.9821%" y="2015.50"></text></g><g><title>[unknown] (2,250 samples, 31.90%)</title><rect x="2.9912%" y="2021" width="31.8968%" height="15" fill="rgb(220,39,43)" fg:x="211" fg:w="2250"/><text x="3.2412%" y="2031.50">[unknown]</text></g><g><title>pthread_mutex_unlock@@GLIBC_2.2.5 (1 samples, 0.01%)</title><rect x="34.8738%" y="2005" width="0.0142%" height="15" fill="rgb(229,68,48)" fg:x="2460" fg:w="1"/><text x="35.1238%" y="2015.50"></text></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.01%)</title><rect x="34.8880%" y="2021" width="0.0142%" height="15" fill="rgb(252,8,32)" fg:x="2461" fg:w="1"/><text x="35.1380%" y="2031.50"></text></g><g><title>__memmove_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="34.9022%" y="2021" width="0.0142%" height="15" fill="rgb(223,20,43)" fg:x="2462" fg:w="1"/><text x="35.1522%" y="2031.50"></text></g><g><title>alloc::sync::arcinner_layout_for_value_layout (1 samples, 0.01%)</title><rect x="34.9164%" y="2021" width="0.0142%" height="15" fill="rgb(229,81,49)" fg:x="2463" fg:w="1"/><text x="35.1664%" y="2031.50"></text></g><g><title>keras::umkansanize (4 samples, 0.06%)</title><rect x="34.9305%" y="2021" width="0.0567%" height="15" fill="rgb(236,28,36)" fg:x="2464" fg:w="4"/><text x="35.1805%" y="2031.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="34.9872%" y="2021" width="0.0142%" height="15" fill="rgb(249,185,26)" fg:x="2468" fg:w="1"/><text x="35.2372%" y="2031.50"></text></g><g><title>pthread_detach@@GLIBC_2.34 (1 samples, 0.01%)</title><rect x="35.0014%" y="2021" width="0.0142%" height="15" fill="rgb(249,174,33)" fg:x="2469" fg:w="1"/><text x="35.2514%" y="2031.50"></text></g><g><title>std::sys::unix::os::split_paths::bytes_to_path (1 samples, 0.01%)</title><rect x="35.0156%" y="2021" width="0.0142%" height="15" fill="rgb(233,201,37)" fg:x="2470" fg:w="1"/><text x="35.2656%" y="2031.50"></text></g><g><title>[unknown] (2,262 samples, 32.07%)</title><rect x="2.9770%" y="2037" width="32.0669%" height="15" fill="rgb(221,78,26)" fg:x="210" fg:w="2262"/><text x="3.2270%" y="2047.50">[unknown]</text></g><g><title>std::sys_common::thread::min_stack (1 samples, 0.01%)</title><rect x="35.0298%" y="2021" width="0.0142%" height="15" fill="rgb(250,127,30)" fg:x="2471" fg:w="1"/><text x="35.2798%" y="2031.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.01%)</title><rect x="35.0439%" y="2037" width="0.0142%" height="15" fill="rgb(230,49,44)" fg:x="2472" fg:w="1"/><text x="35.2939%" y="2047.50"></text></g><g><title>__GI___libc_open (29 samples, 0.41%)</title><rect x="35.0581%" y="2037" width="0.4111%" height="15" fill="rgb(229,67,23)" fg:x="2473" fg:w="29"/><text x="35.3081%" y="2047.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="35.4551%" y="2021" width="0.0142%" height="15" fill="rgb(249,83,47)" fg:x="2501" fg:w="1"/><text x="35.7051%" y="2031.50"></text></g><g><title>__GI___libc_write (14 samples, 0.20%)</title><rect x="35.4692%" y="2037" width="0.1985%" height="15" fill="rgb(215,43,3)" fg:x="2502" fg:w="14"/><text x="35.7192%" y="2047.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="35.6394%" y="2021" width="0.0284%" height="15" fill="rgb(238,154,13)" fg:x="2514" fg:w="2"/><text x="35.8894%" y="2031.50"></text></g><g><title>__GI___pthread_attr_destroy (1 samples, 0.01%)</title><rect x="35.6677%" y="2037" width="0.0142%" height="15" fill="rgb(219,56,2)" fg:x="2516" fg:w="1"/><text x="35.9177%" y="2047.50"></text></g><g><title>__GI___pthread_disable_asynccancel (9 samples, 0.13%)</title><rect x="35.6819%" y="2037" width="0.1276%" height="15" fill="rgb(233,0,4)" fg:x="2517" fg:w="9"/><text x="35.9319%" y="2047.50"></text></g><g><title>__GI___pthread_enable_asynccancel (7 samples, 0.10%)</title><rect x="35.8095%" y="2037" width="0.0992%" height="15" fill="rgb(235,30,7)" fg:x="2526" fg:w="7"/><text x="36.0595%" y="2047.50"></text></g><g><title>__getpagesize (1 samples, 0.01%)</title><rect x="35.9087%" y="2037" width="0.0142%" height="15" fill="rgb(250,79,13)" fg:x="2533" fg:w="1"/><text x="36.1587%" y="2047.50"></text></g><g><title>__libc_calloc (11 samples, 0.16%)</title><rect x="35.9229%" y="2037" width="0.1559%" height="15" fill="rgb(211,146,34)" fg:x="2534" fg:w="11"/><text x="36.1729%" y="2047.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.07%)</title><rect x="36.0788%" y="2037" width="0.0709%" height="15" fill="rgb(228,22,38)" fg:x="2545" fg:w="5"/><text x="36.3288%" y="2047.50"></text></g><g><title>__malloc_arena_thread_freeres (33 samples, 0.47%)</title><rect x="36.1497%" y="2037" width="0.4678%" height="15" fill="rgb(235,168,5)" fg:x="2550" fg:w="33"/><text x="36.3997%" y="2047.50"></text></g><g><title>__memmove_sse2_unaligned_erms (5 samples, 0.07%)</title><rect x="36.6175%" y="2037" width="0.0709%" height="15" fill="rgb(221,155,16)" fg:x="2583" fg:w="5"/><text x="36.8675%" y="2047.50"></text></g><g><title>__pthread_get_minstack (1 samples, 0.01%)</title><rect x="36.6884%" y="2037" width="0.0142%" height="15" fill="rgb(215,215,53)" fg:x="2588" fg:w="1"/><text x="36.9384%" y="2047.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="36.7026%" y="2037" width="0.0142%" height="15" fill="rgb(223,4,10)" fg:x="2589" fg:w="1"/><text x="36.9526%" y="2047.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="36.7168%" y="2037" width="0.0142%" height="15" fill="rgb(234,103,6)" fg:x="2590" fg:w="1"/><text x="36.9668%" y="2047.50"></text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="36.7309%" y="2037" width="0.0142%" height="15" fill="rgb(227,97,0)" fg:x="2591" fg:w="1"/><text x="36.9809%" y="2047.50"></text></g><g><title>_dl_allocate_tls_init (1 samples, 0.01%)</title><rect x="36.7451%" y="2037" width="0.0142%" height="15" fill="rgb(234,150,53)" fg:x="2592" fg:w="1"/><text x="36.9951%" y="2047.50"></text></g><g><title>_dl_deallocate_tls (8 samples, 0.11%)</title><rect x="36.7593%" y="2037" width="0.1134%" height="15" fill="rgb(228,201,54)" fg:x="2593" fg:w="8"/><text x="37.0093%" y="2047.50"></text></g><g><title>_int_free (97 samples, 1.38%)</title><rect x="36.8727%" y="2037" width="1.3751%" height="15" fill="rgb(222,22,37)" fg:x="2601" fg:w="97"/><text x="37.1227%" y="2047.50"></text></g><g><title>_int_malloc (113 samples, 1.60%)</title><rect x="38.2478%" y="2037" width="1.6019%" height="15" fill="rgb(237,53,32)" fg:x="2698" fg:w="113"/><text x="38.4978%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="39.8497%" y="2037" width="0.0567%" height="15" fill="rgb(233,25,53)" fg:x="2811" fg:w="4"/><text x="40.0997%" y="2047.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="39.9064%" y="2037" width="0.0425%" height="15" fill="rgb(210,40,34)" fg:x="2815" fg:w="3"/><text x="40.1564%" y="2047.50"></text></g><g><title>alloc_perturb (1 samples, 0.01%)</title><rect x="39.9490%" y="2037" width="0.0142%" height="15" fill="rgb(241,220,44)" fg:x="2818" fg:w="1"/><text x="40.1990%" y="2047.50"></text></g><g><title>cfree@GLIBC_2.2.5 (5 samples, 0.07%)</title><rect x="39.9631%" y="2037" width="0.0709%" height="15" fill="rgb(235,28,35)" fg:x="2819" fg:w="5"/><text x="40.2131%" y="2047.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="40.0340%" y="2037" width="0.0142%" height="15" fill="rgb(210,56,17)" fg:x="2824" fg:w="1"/><text x="40.2840%" y="2047.50"></text></g><g><title>create_thread (2 samples, 0.03%)</title><rect x="40.0482%" y="2037" width="0.0284%" height="15" fill="rgb(224,130,29)" fg:x="2825" fg:w="2"/><text x="40.2982%" y="2047.50"></text></g><g><title>keras::umkansanize (2 samples, 0.03%)</title><rect x="40.0766%" y="2037" width="0.0284%" height="15" fill="rgb(235,212,8)" fg:x="2827" fg:w="2"/><text x="40.3266%" y="2047.50"></text></g><g><title>malloc (10 samples, 0.14%)</title><rect x="40.1049%" y="2037" width="0.1418%" height="15" fill="rgb(223,33,50)" fg:x="2829" fg:w="10"/><text x="40.3549%" y="2047.50"></text></g><g><title>malloc_consolidate (7 samples, 0.10%)</title><rect x="40.2467%" y="2037" width="0.0992%" height="15" fill="rgb(219,149,13)" fg:x="2839" fg:w="7"/><text x="40.4967%" y="2047.50"></text></g><g><title>memcpy@GLIBC_2.2.5 (5 samples, 0.07%)</title><rect x="40.3459%" y="2037" width="0.0709%" height="15" fill="rgb(250,156,29)" fg:x="2846" fg:w="5"/><text x="40.5959%" y="2047.50"></text></g><g><title>pthread_attr_setstacksize@GLIBC_2.2.5 (1 samples, 0.01%)</title><rect x="40.4168%" y="2037" width="0.0142%" height="15" fill="rgb(216,193,19)" fg:x="2851" fg:w="1"/><text x="40.6668%" y="2047.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="40.4310%" y="2037" width="0.0425%" height="15" fill="rgb(216,135,14)" fg:x="2852" fg:w="3"/><text x="40.6810%" y="2047.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="40.4735%" y="2037" width="0.0142%" height="15" fill="rgb(241,47,5)" fg:x="2855" fg:w="1"/><text x="40.7235%" y="2047.50"></text></g><g><title>std::path::Components::as_path (3 samples, 0.04%)</title><rect x="40.4877%" y="2037" width="0.0425%" height="15" fill="rgb(233,42,35)" fg:x="2856" fg:w="3"/><text x="40.7377%" y="2047.50"></text></g><g><title>std::path::Components::parse_next_component_back (1 samples, 0.01%)</title><rect x="40.5302%" y="2037" width="0.0142%" height="15" fill="rgb(231,13,6)" fg:x="2859" fg:w="1"/><text x="40.7802%" y="2047.50"></text></g><g><title>std::path::Path::_join (3 samples, 0.04%)</title><rect x="40.5444%" y="2037" width="0.0425%" height="15" fill="rgb(207,181,40)" fg:x="2860" fg:w="3"/><text x="40.7944%" y="2047.50"></text></g><g><title>std::path::Path::file_stem (2 samples, 0.03%)</title><rect x="40.5869%" y="2037" width="0.0284%" height="15" fill="rgb(254,173,49)" fg:x="2863" fg:w="2"/><text x="40.8369%" y="2047.50"></text></g><g><title>std::path::PathBuf::_set_extension (1 samples, 0.01%)</title><rect x="40.6153%" y="2037" width="0.0142%" height="15" fill="rgb(221,1,38)" fg:x="2865" fg:w="1"/><text x="40.8653%" y="2047.50"></text></g><g><title>std::sys::unix::thread::Thread::new (2 samples, 0.03%)</title><rect x="40.6294%" y="2037" width="0.0284%" height="15" fill="rgb(206,124,46)" fg:x="2866" fg:w="2"/><text x="40.8794%" y="2047.50"></text></g><g><title>std::thread::spawn (2 samples, 0.03%)</title><rect x="40.6578%" y="2037" width="0.0284%" height="15" fill="rgb(249,21,11)" fg:x="2868" fg:w="2"/><text x="40.9078%" y="2047.50"></text></g><g><title>tcache_init.part.0 (5 samples, 0.07%)</title><rect x="40.6861%" y="2037" width="0.0709%" height="15" fill="rgb(222,201,40)" fg:x="2870" fg:w="5"/><text x="40.9361%" y="2047.50"></text></g><g><title>[unknown] (2,682 samples, 38.02%)</title><rect x="2.8778%" y="2053" width="38.0210%" height="15" fill="rgb(235,61,29)" fg:x="203" fg:w="2682"/><text x="3.1278%" y="2063.50">[unknown]</text></g><g><title>unlink_chunk.constprop.0 (10 samples, 0.14%)</title><rect x="40.7570%" y="2037" width="0.1418%" height="15" fill="rgb(219,207,3)" fg:x="2875" fg:w="10"/><text x="41.0070%" y="2047.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hc7c01dbcd2a259ceE.llvm.13630955617534131769 (9 samples, 0.13%)</title><rect x="40.8988%" y="2053" width="0.1276%" height="15" fill="rgb(222,56,46)" fg:x="2885" fg:w="9"/><text x="41.1488%" y="2063.50"></text></g><g><title>__GI___libc_open (3 samples, 0.04%)</title><rect x="41.0264%" y="2053" width="0.0425%" height="15" fill="rgb(239,76,54)" fg:x="2894" fg:w="3"/><text x="41.2764%" y="2063.50"></text></g><g><title>__GI___mkdir (11 samples, 0.16%)</title><rect x="41.0689%" y="2053" width="0.1559%" height="15" fill="rgb(231,124,27)" fg:x="2897" fg:w="11"/><text x="41.3189%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="41.2107%" y="2037" width="0.0142%" height="15" fill="rgb(249,195,6)" fg:x="2907" fg:w="1"/><text x="41.4607%" y="2047.50"></text></g><g><title>__GI___nptl_deallocate_stack (2 samples, 0.03%)</title><rect x="41.2248%" y="2053" width="0.0284%" height="15" fill="rgb(237,174,47)" fg:x="2908" fg:w="2"/><text x="41.4748%" y="2063.50"></text></g><g><title>__GI___nptl_deallocate_tsd (2 samples, 0.03%)</title><rect x="41.2532%" y="2053" width="0.0284%" height="15" fill="rgb(206,201,31)" fg:x="2910" fg:w="2"/><text x="41.5032%" y="2063.50"></text></g><g><title>__GI___nptl_free_tcb (2 samples, 0.03%)</title><rect x="41.2815%" y="2053" width="0.0284%" height="15" fill="rgb(231,57,52)" fg:x="2912" fg:w="2"/><text x="41.5315%" y="2063.50"></text></g><g><title>__GI___nptl_stack_list_add (1 samples, 0.01%)</title><rect x="41.3099%" y="2053" width="0.0142%" height="15" fill="rgb(248,177,22)" fg:x="2914" fg:w="1"/><text x="41.5599%" y="2063.50"></text></g><g><title>__GI___pthread_attr_destroy (15 samples, 0.21%)</title><rect x="41.3241%" y="2053" width="0.2126%" height="15" fill="rgb(215,211,37)" fg:x="2915" fg:w="15"/><text x="41.5741%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="41.5225%" y="2037" width="0.0142%" height="15" fill="rgb(241,128,51)" fg:x="2929" fg:w="1"/><text x="41.7725%" y="2047.50"></text></g><g><title>__GI___pthread_disable_asynccancel (8 samples, 0.11%)</title><rect x="41.5367%" y="2053" width="0.1134%" height="15" fill="rgb(227,165,31)" fg:x="2930" fg:w="8"/><text x="41.7867%" y="2063.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="41.6501%" y="2053" width="0.0142%" height="15" fill="rgb(228,167,24)" fg:x="2938" fg:w="1"/><text x="41.9001%" y="2063.50"></text></g><g><title>__GI___pthread_self (2 samples, 0.03%)</title><rect x="41.6643%" y="2053" width="0.0284%" height="15" fill="rgb(228,143,12)" fg:x="2939" fg:w="2"/><text x="41.9143%" y="2063.50"></text></g><g><title>__GI___sigaltstack (20 samples, 0.28%)</title><rect x="41.6927%" y="2053" width="0.2835%" height="15" fill="rgb(249,149,8)" fg:x="2941" fg:w="20"/><text x="41.9427%" y="2063.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="41.8911%" y="2037" width="0.0851%" height="15" fill="rgb(243,35,44)" fg:x="2955" fg:w="6"/><text x="42.1411%" y="2047.50"></text></g><g><title>__call_tls_dtors (8 samples, 0.11%)</title><rect x="41.9762%" y="2053" width="0.1134%" height="15" fill="rgb(246,89,9)" fg:x="2961" fg:w="8"/><text x="42.2262%" y="2063.50"></text></g><g><title>__close (97 samples, 1.38%)</title><rect x="42.0896%" y="2053" width="1.3751%" height="15" fill="rgb(233,213,13)" fg:x="2969" fg:w="97"/><text x="42.3396%" y="2063.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="43.4080%" y="2037" width="0.0567%" height="15" fill="rgb(233,141,41)" fg:x="3062" fg:w="4"/><text x="43.6580%" y="2047.50"></text></g><g><title>__ctype_init (18 samples, 0.26%)</title><rect x="43.4647%" y="2053" width="0.2552%" height="15" fill="rgb(239,167,4)" fg:x="3066" fg:w="18"/><text x="43.7147%" y="2063.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.01%)</title><rect x="43.7199%" y="2053" width="0.0142%" height="15" fill="rgb(209,217,16)" fg:x="3084" fg:w="1"/><text x="43.9699%" y="2063.50"></text></g><g><title>__errno_location (1 samples, 0.01%)</title><rect x="43.7341%" y="2053" width="0.0142%" height="15" fill="rgb(219,88,35)" fg:x="3085" fg:w="1"/><text x="43.9841%" y="2063.50"></text></g><g><title>__getpagesize (32 samples, 0.45%)</title><rect x="43.7482%" y="2053" width="0.4536%" height="15" fill="rgb(220,193,23)" fg:x="3086" fg:w="32"/><text x="43.9982%" y="2063.50"></text></g><g><title>__glibc_tls_internal_free (1 samples, 0.01%)</title><rect x="44.2019%" y="2053" width="0.0142%" height="15" fill="rgb(230,90,52)" fg:x="3118" fg:w="1"/><text x="44.4519%" y="2063.50"></text></g><g><title>__libc_calloc (10 samples, 0.14%)</title><rect x="44.2160%" y="2053" width="0.1418%" height="15" fill="rgb(252,106,19)" fg:x="3119" fg:w="10"/><text x="44.4660%" y="2063.50"></text></g><g><title>__libc_thread_freeres (2 samples, 0.03%)</title><rect x="44.3578%" y="2053" width="0.0284%" height="15" fill="rgb(206,74,20)" fg:x="3129" fg:w="2"/><text x="44.6078%" y="2063.50"></text></g><g><title>__lll_lock_wait_private (11 samples, 0.16%)</title><rect x="44.3862%" y="2053" width="0.1559%" height="15" fill="rgb(230,138,44)" fg:x="3131" fg:w="11"/><text x="44.6362%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.5279%" y="2037" width="0.0142%" height="15" fill="rgb(235,182,43)" fg:x="3141" fg:w="1"/><text x="44.7779%" y="2047.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.01%)</title><rect x="44.5421%" y="2053" width="0.0142%" height="15" fill="rgb(242,16,51)" fg:x="3142" fg:w="1"/><text x="44.7921%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.5421%" y="2037" width="0.0142%" height="15" fill="rgb(248,9,4)" fg:x="3142" fg:w="1"/><text x="44.7921%" y="2047.50"></text></g><g><title>__madvise (300 samples, 4.25%)</title><rect x="44.5563%" y="2053" width="4.2529%" height="15" fill="rgb(210,31,22)" fg:x="3143" fg:w="300"/><text x="44.8063%" y="2063.50">__mad..</text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="48.7525%" y="2037" width="0.0567%" height="15" fill="rgb(239,54,39)" fg:x="3439" fg:w="4"/><text x="49.0025%" y="2047.50"></text></g><g><title>__memmove_sse2_unaligned_erms (28 samples, 0.40%)</title><rect x="48.8092%" y="2053" width="0.3969%" height="15" fill="rgb(230,99,41)" fg:x="3443" fg:w="28"/><text x="49.0592%" y="2063.50"></text></g><g><title>__memset_sse2_unaligned (9 samples, 0.13%)</title><rect x="49.2061%" y="2053" width="0.1276%" height="15" fill="rgb(253,106,12)" fg:x="3471" fg:w="9"/><text x="49.4561%" y="2063.50"></text></g><g><title>__memset_sse2_unaligned_erms (4 samples, 0.06%)</title><rect x="49.3337%" y="2053" width="0.0567%" height="15" fill="rgb(213,46,41)" fg:x="3480" fg:w="4"/><text x="49.5837%" y="2063.50"></text></g><g><title>__mmap (1,090 samples, 15.45%)</title><rect x="49.3904%" y="2053" width="15.4522%" height="15" fill="rgb(215,133,35)" fg:x="3484" fg:w="1090"/><text x="49.6404%" y="2063.50">__mmap</text></g><g><title>[unknown] (23 samples, 0.33%)</title><rect x="64.5166%" y="2037" width="0.3261%" height="15" fill="rgb(213,28,5)" fg:x="4551" fg:w="23"/><text x="64.7666%" y="2047.50"></text></g><g><title>__mprotect (142 samples, 2.01%)</title><rect x="64.8426%" y="2053" width="2.0130%" height="15" fill="rgb(215,77,49)" fg:x="4574" fg:w="142"/><text x="65.0926%" y="2063.50">_..</text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="66.8132%" y="2037" width="0.0425%" height="15" fill="rgb(248,100,22)" fg:x="4713" fg:w="3"/><text x="67.0632%" y="2047.50"></text></g><g><title>__munmap (383 samples, 5.43%)</title><rect x="66.8557%" y="2053" width="5.4295%" height="15" fill="rgb(208,67,9)" fg:x="4716" fg:w="383"/><text x="67.1057%" y="2063.50">__munmap</text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="72.2002%" y="2037" width="0.0851%" height="15" fill="rgb(219,133,21)" fg:x="5093" fg:w="6"/><text x="72.4502%" y="2047.50"></text></g><g><title>__pthread_attr_extension (4 samples, 0.06%)</title><rect x="72.2852%" y="2053" width="0.0567%" height="15" fill="rgb(246,46,29)" fg:x="5099" fg:w="4"/><text x="72.5352%" y="2063.50"></text></g><g><title>__rdl_alloc (11 samples, 0.16%)</title><rect x="72.3419%" y="2053" width="0.1559%" height="15" fill="rgb(246,185,52)" fg:x="5103" fg:w="11"/><text x="72.5919%" y="2063.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="72.4979%" y="2053" width="0.0142%" height="15" fill="rgb(252,136,11)" fg:x="5114" fg:w="1"/><text x="72.7479%" y="2063.50"></text></g><g><title>__res_thread_freeres (7 samples, 0.10%)</title><rect x="72.5120%" y="2053" width="0.0992%" height="15" fill="rgb(219,138,53)" fg:x="5115" fg:w="7"/><text x="72.7620%" y="2063.50"></text></g><g><title>__rust_alloc (2 samples, 0.03%)</title><rect x="72.6113%" y="2053" width="0.0284%" height="15" fill="rgb(211,51,23)" fg:x="5122" fg:w="2"/><text x="72.8613%" y="2063.50"></text></g><g><title>__rust_dealloc (5 samples, 0.07%)</title><rect x="72.6396%" y="2053" width="0.0709%" height="15" fill="rgb(247,221,28)" fg:x="5124" fg:w="5"/><text x="72.8896%" y="2063.50"></text></g><g><title>__sigjmp_save (2 samples, 0.03%)</title><rect x="72.7105%" y="2053" width="0.0284%" height="15" fill="rgb(251,222,45)" fg:x="5129" fg:w="2"/><text x="72.9605%" y="2063.50"></text></g><g><title>__sigsetjmp (13 samples, 0.18%)</title><rect x="72.7389%" y="2053" width="0.1843%" height="15" fill="rgb(217,162,53)" fg:x="5131" fg:w="13"/><text x="72.9889%" y="2063.50"></text></g><g><title>__sysconf (166 samples, 2.35%)</title><rect x="72.9232%" y="2053" width="2.3533%" height="15" fill="rgb(229,93,14)" fg:x="5144" fg:w="166"/><text x="73.1732%" y="2063.50">_..</text></g><g><title>_dl_allocate_tls (1 samples, 0.01%)</title><rect x="75.2764%" y="2053" width="0.0142%" height="15" fill="rgb(209,67,49)" fg:x="5310" fg:w="1"/><text x="75.5264%" y="2063.50"></text></g><g><title>_dl_allocate_tls_init (6 samples, 0.09%)</title><rect x="75.2906%" y="2053" width="0.0851%" height="15" fill="rgb(213,87,29)" fg:x="5311" fg:w="6"/><text x="75.5406%" y="2063.50"></text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="75.3757%" y="2037" width="0.0142%" height="15" fill="rgb(205,151,52)" fg:x="5317" fg:w="1"/><text x="75.6257%" y="2047.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="75.3757%" y="2021" width="0.0142%" height="15" fill="rgb(253,215,39)" fg:x="5317" fg:w="1"/><text x="75.6257%" y="2031.50"></text></g><g><title>_dl_start_user (3 samples, 0.04%)</title><rect x="75.3757%" y="2053" width="0.0425%" height="15" fill="rgb(221,220,41)" fg:x="5317" fg:w="3"/><text x="75.6257%" y="2063.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.03%)</title><rect x="75.3898%" y="2037" width="0.0284%" height="15" fill="rgb(218,133,21)" fg:x="5318" fg:w="2"/><text x="75.6398%" y="2047.50"></text></g><g><title>dl_main (2 samples, 0.03%)</title><rect x="75.3898%" y="2021" width="0.0284%" height="15" fill="rgb(221,193,43)" fg:x="5318" fg:w="2"/><text x="75.6398%" y="2031.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="75.4040%" y="2005" width="0.0142%" height="15" fill="rgb(240,128,52)" fg:x="5319" fg:w="1"/><text x="75.6540%" y="2015.50"></text></g><g><title>_int_free (27 samples, 0.38%)</title><rect x="75.4182%" y="2053" width="0.3828%" height="15" fill="rgb(253,114,12)" fg:x="5320" fg:w="27"/><text x="75.6682%" y="2063.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="75.8010%" y="2053" width="0.0142%" height="15" fill="rgb(215,223,47)" fg:x="5347" fg:w="1"/><text x="76.0510%" y="2063.50"></text></g><g><title>_int_realloc (7 samples, 0.10%)</title><rect x="75.8151%" y="2053" width="0.0992%" height="15" fill="rgb(248,225,23)" fg:x="5348" fg:w="7"/><text x="76.0651%" y="2063.50"></text></g><g><title>_setjmp (6 samples, 0.09%)</title><rect x="75.9144%" y="2053" width="0.0851%" height="15" fill="rgb(250,108,0)" fg:x="5355" fg:w="6"/><text x="76.1644%" y="2063.50"></text></g><g><title>_start (6 samples, 0.09%)</title><rect x="75.9994%" y="2053" width="0.0851%" height="15" fill="rgb(228,208,7)" fg:x="5361" fg:w="6"/><text x="76.2494%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.23%)</title><rect x="76.0845%" y="2053" width="0.2268%" height="15" fill="rgb(244,45,10)" fg:x="5367" fg:w="16"/><text x="76.3345%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="76.2971%" y="2037" width="0.0142%" height="15" fill="rgb(207,125,25)" fg:x="5382" fg:w="1"/><text x="76.5471%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="76.3113%" y="2053" width="0.0425%" height="15" fill="rgb(210,195,18)" fg:x="5383" fg:w="3"/><text x="76.5613%" y="2063.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="76.3538%" y="2053" width="0.0142%" height="15" fill="rgb(249,80,12)" fg:x="5386" fg:w="1"/><text x="76.6038%" y="2063.50"></text></g><g><title>alloc_new_heap (1 samples, 0.01%)</title><rect x="76.3680%" y="2053" width="0.0142%" height="15" fill="rgb(221,65,9)" fg:x="5387" fg:w="1"/><text x="76.6180%" y="2063.50"></text></g><g><title>allocate_dtv (1 samples, 0.01%)</title><rect x="76.3822%" y="2053" width="0.0142%" height="15" fill="rgb(235,49,36)" fg:x="5388" fg:w="1"/><text x="76.6322%" y="2063.50"></text></g><g><title>arena_get2 (7 samples, 0.10%)</title><rect x="76.3964%" y="2053" width="0.0992%" height="15" fill="rgb(225,32,20)" fg:x="5389" fg:w="7"/><text x="76.6464%" y="2063.50"></text></g><g><title>calloc@plt (3 samples, 0.04%)</title><rect x="76.4956%" y="2053" width="0.0425%" height="15" fill="rgb(215,141,46)" fg:x="5396" fg:w="3"/><text x="76.7456%" y="2063.50"></text></g><g><title>cfree@GLIBC_2.2.5 (78 samples, 1.11%)</title><rect x="76.5381%" y="2053" width="1.1058%" height="15" fill="rgb(250,160,47)" fg:x="5399" fg:w="78"/><text x="76.7881%" y="2063.50"></text></g><g><title>clone3 (5 samples, 0.07%)</title><rect x="77.6439%" y="2053" width="0.0709%" height="15" fill="rgb(216,222,40)" fg:x="5477" fg:w="5"/><text x="77.8939%" y="2063.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (28 samples, 0.40%)</title><rect x="77.7148%" y="2053" width="0.3969%" height="15" fill="rgb(234,217,39)" fg:x="5482" fg:w="28"/><text x="77.9648%" y="2063.50"></text></g><g><title>core::fmt::Formatter::pad_integral (32 samples, 0.45%)</title><rect x="78.1117%" y="2053" width="0.4536%" height="15" fill="rgb(207,178,40)" fg:x="5510" fg:w="32"/><text x="78.3617%" y="2063.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (19 samples, 0.27%)</title><rect x="78.5654%" y="2053" width="0.2694%" height="15" fill="rgb(221,136,13)" fg:x="5542" fg:w="19"/><text x="78.8154%" y="2063.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (14 samples, 0.20%)</title><rect x="78.8347%" y="2053" width="0.1985%" height="15" fill="rgb(249,199,10)" fg:x="5561" fg:w="14"/><text x="79.0847%" y="2063.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="79.0332%" y="2053" width="0.0142%" height="15" fill="rgb(249,222,13)" fg:x="5575" fg:w="1"/><text x="79.2832%" y="2063.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11 samples, 0.16%)</title><rect x="79.0473%" y="2053" width="0.1559%" height="15" fill="rgb(244,185,38)" fg:x="5576" fg:w="11"/><text x="79.2973%" y="2063.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="79.2033%" y="2053" width="0.0142%" height="15" fill="rgb(236,202,9)" fg:x="5587" fg:w="1"/><text x="79.4533%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (1 samples, 0.01%)</title><rect x="79.2175%" y="2053" width="0.0142%" height="15" fill="rgb(250,229,37)" fg:x="5588" fg:w="1"/><text x="79.4675%" y="2063.50"></text></g><g><title>exit (1 samples, 0.01%)</title><rect x="79.2316%" y="2053" width="0.0142%" height="15" fill="rgb(206,174,23)" fg:x="5589" fg:w="1"/><text x="79.4816%" y="2063.50"></text></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="79.2458%" y="2053" width="0.0142%" height="15" fill="rgb(211,33,43)" fg:x="5590" fg:w="1"/><text x="79.4958%" y="2063.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="79.2600%" y="2053" width="0.0142%" height="15" fill="rgb(245,58,50)" fg:x="5591" fg:w="1"/><text x="79.5100%" y="2063.50"></text></g><g><title>malloc (51 samples, 0.72%)</title><rect x="79.2742%" y="2053" width="0.7230%" height="15" fill="rgb(244,68,36)" fg:x="5592" fg:w="51"/><text x="79.5242%" y="2063.50"></text></g><g><title>malloc_consolidate (35 samples, 0.50%)</title><rect x="79.9972%" y="2053" width="0.4962%" height="15" fill="rgb(232,229,15)" fg:x="5643" fg:w="35"/><text x="80.2472%" y="2063.50"></text></g><g><title>memcpy@@GLIBC_2.14@plt (1 samples, 0.01%)</title><rect x="80.4933%" y="2053" width="0.0142%" height="15" fill="rgb(254,30,23)" fg:x="5678" fg:w="1"/><text x="80.7433%" y="2063.50"></text></g><g><title>memcpy@GLIBC_2.2.5 (15 samples, 0.21%)</title><rect x="80.5075%" y="2053" width="0.2126%" height="15" fill="rgb(235,160,14)" fg:x="5679" fg:w="15"/><text x="80.7575%" y="2063.50"></text></g><g><title>memmove (1 samples, 0.01%)</title><rect x="80.7202%" y="2053" width="0.0142%" height="15" fill="rgb(212,155,44)" fg:x="5694" fg:w="1"/><text x="80.9702%" y="2063.50"></text></g><g><title>memset (1 samples, 0.01%)</title><rect x="80.7343%" y="2053" width="0.0142%" height="15" fill="rgb(226,2,50)" fg:x="5695" fg:w="1"/><text x="80.9843%" y="2063.50"></text></g><g><title>memset@plt (2 samples, 0.03%)</title><rect x="80.7485%" y="2053" width="0.0284%" height="15" fill="rgb(234,177,6)" fg:x="5696" fg:w="2"/><text x="80.9985%" y="2063.50"></text></g><g><title>pthread_attr_getguardsize@@GLIBC_2.34 (2 samples, 0.03%)</title><rect x="80.7769%" y="2053" width="0.0284%" height="15" fill="rgb(217,24,9)" fg:x="5698" fg:w="2"/><text x="81.0269%" y="2063.50"></text></g><g><title>pthread_attr_getstack@@GLIBC_2.34 (4 samples, 0.06%)</title><rect x="80.8052%" y="2053" width="0.0567%" height="15" fill="rgb(220,13,46)" fg:x="5700" fg:w="4"/><text x="81.0552%" y="2063.50"></text></g><g><title>pthread_attr_init@@GLIBC_2.2.5 (1 samples, 0.01%)</title><rect x="80.8619%" y="2053" width="0.0142%" height="15" fill="rgb(239,221,27)" fg:x="5704" fg:w="1"/><text x="81.1119%" y="2063.50"></text></g><g><title>pthread_attr_setaffinity_np@@GLIBC_2.32 (3 samples, 0.04%)</title><rect x="80.8761%" y="2053" width="0.0425%" height="15" fill="rgb(222,198,25)" fg:x="5705" fg:w="3"/><text x="81.1261%" y="2063.50"></text></g><g><title>pthread_create@GLIBC_2.2.5 (90 samples, 1.28%)</title><rect x="80.9186%" y="2053" width="1.2759%" height="15" fill="rgb(211,99,13)" fg:x="5708" fg:w="90"/><text x="81.1686%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.1803%" y="2037" width="0.0142%" height="15" fill="rgb(232,111,31)" fg:x="5797" fg:w="1"/><text x="82.4303%" y="2047.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (7 samples, 0.10%)</title><rect x="82.1945%" y="2053" width="0.0992%" height="15" fill="rgb(245,82,37)" fg:x="5798" fg:w="7"/><text x="82.4445%" y="2063.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="82.2512%" y="2037" width="0.0425%" height="15" fill="rgb(227,149,46)" fg:x="5802" fg:w="3"/><text x="82.5012%" y="2047.50"></text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (6 samples, 0.09%)</title><rect x="82.2937%" y="2053" width="0.0851%" height="15" fill="rgb(218,36,50)" fg:x="5805" fg:w="6"/><text x="82.5437%" y="2063.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (1 samples, 0.01%)</title><rect x="82.3788%" y="2053" width="0.0142%" height="15" fill="rgb(226,80,48)" fg:x="5811" fg:w="1"/><text x="82.6288%" y="2063.50"></text></g><g><title>read (16 samples, 0.23%)</title><rect x="82.3930%" y="2053" width="0.2268%" height="15" fill="rgb(238,224,15)" fg:x="5812" fg:w="16"/><text x="82.6430%" y="2063.50"></text></g><g><title>realloc (28 samples, 0.40%)</title><rect x="82.6198%" y="2053" width="0.3969%" height="15" fill="rgb(241,136,10)" fg:x="5828" fg:w="28"/><text x="82.8698%" y="2063.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="2053" width="0.0284%" height="15" fill="rgb(208,32,45)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="2063.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="2037" width="0.0284%" height="15" fill="rgb(207,135,9)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="2047.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="2021" width="0.0284%" height="15" fill="rgb(206,86,44)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="2031.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="2005" width="0.0284%" height="15" fill="rgb(245,177,15)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="2015.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1989" width="0.0284%" height="15" fill="rgb(206,64,50)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1999.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1973" width="0.0284%" height="15" fill="rgb(234,36,40)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1983.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1957" width="0.0284%" height="15" fill="rgb(213,64,8)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1967.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1941" width="0.0284%" height="15" fill="rgb(210,75,36)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1951.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1925" width="0.0284%" height="15" fill="rgb(229,88,21)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1935.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1909" width="0.0284%" height="15" fill="rgb(252,204,47)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1919.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1893" width="0.0284%" height="15" fill="rgb(208,77,27)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1903.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1877" width="0.0284%" height="15" fill="rgb(221,76,26)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1887.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1861" width="0.0284%" height="15" fill="rgb(225,139,18)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1871.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1845" width="0.0284%" height="15" fill="rgb(230,137,11)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1855.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1829" width="0.0284%" height="15" fill="rgb(212,28,1)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1839.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1813" width="0.0284%" height="15" fill="rgb(248,164,17)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1823.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1797" width="0.0284%" height="15" fill="rgb(222,171,42)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1807.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1781" width="0.0284%" height="15" fill="rgb(243,84,45)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1791.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1765" width="0.0284%" height="15" fill="rgb(252,49,23)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1775.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1749" width="0.0284%" height="15" fill="rgb(215,19,7)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1759.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1733" width="0.0284%" height="15" fill="rgb(238,81,41)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1743.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1717" width="0.0284%" height="15" fill="rgb(210,199,37)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1727.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1701" width="0.0284%" height="15" fill="rgb(244,192,49)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1711.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1685" width="0.0284%" height="15" fill="rgb(226,211,11)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1695.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1669" width="0.0284%" height="15" fill="rgb(236,162,54)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1679.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1653" width="0.0284%" height="15" fill="rgb(220,229,9)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1663.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1637" width="0.0284%" height="15" fill="rgb(250,87,22)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1647.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1621" width="0.0284%" height="15" fill="rgb(239,43,17)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1631.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1605" width="0.0284%" height="15" fill="rgb(231,177,25)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1615.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1589" width="0.0284%" height="15" fill="rgb(219,179,1)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1599.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1573" width="0.0284%" height="15" fill="rgb(238,219,53)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1583.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1557" width="0.0284%" height="15" fill="rgb(232,167,36)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1567.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1541" width="0.0284%" height="15" fill="rgb(244,19,51)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1551.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1525" width="0.0284%" height="15" fill="rgb(224,6,22)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1535.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1509" width="0.0284%" height="15" fill="rgb(224,145,5)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1519.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1493" width="0.0284%" height="15" fill="rgb(234,130,49)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1503.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1477" width="0.0284%" height="15" fill="rgb(254,6,2)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1487.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1461" width="0.0284%" height="15" fill="rgb(208,96,46)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1471.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1445" width="0.0284%" height="15" fill="rgb(239,3,39)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1455.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1429" width="0.0284%" height="15" fill="rgb(233,210,1)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1439.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1413" width="0.0284%" height="15" fill="rgb(244,137,37)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1423.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1397" width="0.0284%" height="15" fill="rgb(240,136,2)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1407.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1381" width="0.0284%" height="15" fill="rgb(239,18,37)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1391.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1365" width="0.0284%" height="15" fill="rgb(218,185,22)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1375.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1349" width="0.0284%" height="15" fill="rgb(225,218,4)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1359.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1333" width="0.0284%" height="15" fill="rgb(230,182,32)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1343.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1317" width="0.0284%" height="15" fill="rgb(242,56,43)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1327.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1301" width="0.0284%" height="15" fill="rgb(233,99,24)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1311.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1285" width="0.0284%" height="15" fill="rgb(234,209,42)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1295.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1269" width="0.0284%" height="15" fill="rgb(227,7,12)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1279.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1253" width="0.0284%" height="15" fill="rgb(245,203,43)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1263.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1237" width="0.0284%" height="15" fill="rgb(238,205,33)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1247.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1221" width="0.0284%" height="15" fill="rgb(231,56,7)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1231.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1205" width="0.0284%" height="15" fill="rgb(244,186,29)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1215.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1189" width="0.0284%" height="15" fill="rgb(234,111,31)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1199.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1173" width="0.0284%" height="15" fill="rgb(241,149,10)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1183.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1157" width="0.0284%" height="15" fill="rgb(249,206,44)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1167.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1141" width="0.0284%" height="15" fill="rgb(251,153,30)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1151.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1125" width="0.0284%" height="15" fill="rgb(239,152,38)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1135.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1109" width="0.0284%" height="15" fill="rgb(249,139,47)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1119.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1093" width="0.0284%" height="15" fill="rgb(244,64,35)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1103.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1077" width="0.0284%" height="15" fill="rgb(216,46,15)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1087.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1061" width="0.0284%" height="15" fill="rgb(250,74,19)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1071.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1045" width="0.0284%" height="15" fill="rgb(249,42,33)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1055.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1029" width="0.0284%" height="15" fill="rgb(242,149,17)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1039.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="1013" width="0.0284%" height="15" fill="rgb(244,29,21)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1023.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="997" width="0.0284%" height="15" fill="rgb(220,130,37)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="1007.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="981" width="0.0284%" height="15" fill="rgb(211,67,2)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="991.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="965" width="0.0284%" height="15" fill="rgb(235,68,52)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="975.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="949" width="0.0284%" height="15" fill="rgb(246,142,3)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="959.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="933" width="0.0284%" height="15" fill="rgb(241,25,7)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="943.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="917" width="0.0284%" height="15" fill="rgb(242,119,39)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="927.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="901" width="0.0284%" height="15" fill="rgb(241,98,45)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="911.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="885" width="0.0284%" height="15" fill="rgb(254,28,30)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="895.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="869" width="0.0284%" height="15" fill="rgb(241,142,54)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="879.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="853" width="0.0284%" height="15" fill="rgb(222,85,15)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="863.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="837" width="0.0284%" height="15" fill="rgb(210,85,47)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="847.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="821" width="0.0284%" height="15" fill="rgb(224,206,25)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="831.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="805" width="0.0284%" height="15" fill="rgb(243,201,19)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="815.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="789" width="0.0284%" height="15" fill="rgb(236,59,4)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="799.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="773" width="0.0284%" height="15" fill="rgb(254,179,45)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="783.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="757" width="0.0284%" height="15" fill="rgb(226,14,10)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="767.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="741" width="0.0284%" height="15" fill="rgb(244,27,41)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="751.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="725" width="0.0284%" height="15" fill="rgb(235,35,32)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="735.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="709" width="0.0284%" height="15" fill="rgb(218,68,31)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="719.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="693" width="0.0284%" height="15" fill="rgb(207,120,37)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="703.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="677" width="0.0284%" height="15" fill="rgb(227,98,0)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="687.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="661" width="0.0284%" height="15" fill="rgb(207,7,3)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="671.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="645" width="0.0284%" height="15" fill="rgb(206,98,19)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="655.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="629" width="0.0284%" height="15" fill="rgb(217,5,26)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="639.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="613" width="0.0284%" height="15" fill="rgb(235,190,38)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="623.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="597" width="0.0284%" height="15" fill="rgb(247,86,24)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="607.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="581" width="0.0284%" height="15" fill="rgb(205,101,16)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="591.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="565" width="0.0284%" height="15" fill="rgb(246,168,33)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="575.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="549" width="0.0284%" height="15" fill="rgb(231,114,1)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="559.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="533" width="0.0284%" height="15" fill="rgb(207,184,53)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="543.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="517" width="0.0284%" height="15" fill="rgb(224,95,51)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="527.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="501" width="0.0284%" height="15" fill="rgb(212,188,45)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="511.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="485" width="0.0284%" height="15" fill="rgb(223,154,38)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="495.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="469" width="0.0284%" height="15" fill="rgb(251,22,52)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="479.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="453" width="0.0284%" height="15" fill="rgb(229,209,22)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="463.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="437" width="0.0284%" height="15" fill="rgb(234,138,34)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="447.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="421" width="0.0284%" height="15" fill="rgb(212,95,11)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="431.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="405" width="0.0284%" height="15" fill="rgb(240,179,47)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="415.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="389" width="0.0284%" height="15" fill="rgb(240,163,11)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="399.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="373" width="0.0284%" height="15" fill="rgb(236,37,12)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="383.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="357" width="0.0284%" height="15" fill="rgb(232,164,16)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="367.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="341" width="0.0284%" height="15" fill="rgb(244,205,15)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="351.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="325" width="0.0284%" height="15" fill="rgb(223,117,47)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="335.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="309" width="0.0284%" height="15" fill="rgb(244,107,35)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="319.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="293" width="0.0284%" height="15" fill="rgb(205,140,8)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="303.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="277" width="0.0284%" height="15" fill="rgb(228,84,46)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="287.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="261" width="0.0284%" height="15" fill="rgb(254,188,9)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="271.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="245" width="0.0284%" height="15" fill="rgb(206,112,54)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="255.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="229" width="0.0284%" height="15" fill="rgb(216,84,49)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="239.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="213" width="0.0284%" height="15" fill="rgb(214,194,35)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="223.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="197" width="0.0284%" height="15" fill="rgb(249,28,3)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="207.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="181" width="0.0284%" height="15" fill="rgb(222,56,52)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="191.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="165" width="0.0284%" height="15" fill="rgb(245,217,50)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="175.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="149" width="0.0284%" height="15" fill="rgb(213,201,24)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="159.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="133" width="0.0284%" height="15" fill="rgb(248,116,28)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="143.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="117" width="0.0284%" height="15" fill="rgb(219,72,43)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="127.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="101" width="0.0284%" height="15" fill="rgb(209,138,14)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="111.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="85" width="0.0284%" height="15" fill="rgb(222,18,33)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="95.50"></text></g><g><title>rust_eh_personality (2 samples, 0.03%)</title><rect x="83.0167%" y="69" width="0.0284%" height="15" fill="rgb(213,199,7)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="79.50"></text></g><g><title>__pthread_get_minstack (2 samples, 0.03%)</title><rect x="83.0167%" y="53" width="0.0284%" height="15" fill="rgb(250,110,10)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="63.50"></text></g><g><title>_dl_find_dso_for_object (2 samples, 0.03%)</title><rect x="83.0167%" y="37" width="0.0284%" height="15" fill="rgb(248,123,6)" fg:x="5856" fg:w="2"/><text x="83.2667%" y="47.50"></text></g><g><title>start_thread (173 samples, 2.45%)</title><rect x="83.0451%" y="2053" width="2.4525%" height="15" fill="rgb(206,91,31)" fg:x="5858" fg:w="173"/><text x="83.2951%" y="2063.50">st..</text></g><g><title>[unknown] (10 samples, 0.14%)</title><rect x="85.3558%" y="2037" width="0.1418%" height="15" fill="rgb(211,154,13)" fg:x="6021" fg:w="10"/><text x="85.6058%" y="2047.50"></text></g><g><title>statx (4 samples, 0.06%)</title><rect x="85.4976%" y="2053" width="0.0567%" height="15" fill="rgb(225,148,7)" fg:x="6031" fg:w="4"/><text x="85.7476%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.5401%" y="2037" width="0.0142%" height="15" fill="rgb(220,160,43)" fg:x="6034" fg:w="1"/><text x="85.7901%" y="2047.50"></text></g><g><title>std::fs::DirBuilder::create_dir_all (4 samples, 0.06%)</title><rect x="85.5543%" y="2053" width="0.0567%" height="15" fill="rgb(213,52,39)" fg:x="6035" fg:w="4"/><text x="85.8043%" y="2063.50"></text></g><g><title>std::fs::OpenOptions::_open (11 samples, 0.16%)</title><rect x="85.6110%" y="2053" width="0.1559%" height="15" fill="rgb(243,137,7)" fg:x="6039" fg:w="11"/><text x="85.8610%" y="2063.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.01%)</title><rect x="85.7669%" y="2053" width="0.0142%" height="15" fill="rgb(230,79,13)" fg:x="6050" fg:w="1"/><text x="86.0169%" y="2063.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="85.7811%" y="2053" width="0.0142%" height="15" fill="rgb(247,105,23)" fg:x="6051" fg:w="1"/><text x="86.0311%" y="2063.50"></text></g><g><title>std::io::default_read_to_end (4 samples, 0.06%)</title><rect x="85.7953%" y="2053" width="0.0567%" height="15" fill="rgb(223,179,41)" fg:x="6052" fg:w="4"/><text x="86.0453%" y="2063.50"></text></g><g><title>std::io::stdio::set_output_capture (2 samples, 0.03%)</title><rect x="85.8520%" y="2053" width="0.0284%" height="15" fill="rgb(218,9,34)" fg:x="6056" fg:w="2"/><text x="86.1020%" y="2063.50"></text></g><g><title>std::path::Components::len_before_body (5 samples, 0.07%)</title><rect x="85.8804%" y="2053" width="0.0709%" height="15" fill="rgb(222,106,8)" fg:x="6058" fg:w="5"/><text x="86.1304%" y="2063.50"></text></g><g><title>std::path::Components::parse_next_component_back (10 samples, 0.14%)</title><rect x="85.9512%" y="2053" width="0.1418%" height="15" fill="rgb(211,220,0)" fg:x="6063" fg:w="10"/><text x="86.2012%" y="2063.50"></text></g><g><title>std::path::Path::_join (5 samples, 0.07%)</title><rect x="86.0930%" y="2053" width="0.0709%" height="15" fill="rgb(229,52,16)" fg:x="6073" fg:w="5"/><text x="86.3430%" y="2063.50"></text></g><g><title>std::path::Path::_with_file_name (1 samples, 0.01%)</title><rect x="86.1639%" y="2053" width="0.0142%" height="15" fill="rgb(212,155,18)" fg:x="6078" fg:w="1"/><text x="86.4139%" y="2063.50"></text></g><g><title>std::path::Path::extension (1 samples, 0.01%)</title><rect x="86.1781%" y="2053" width="0.0142%" height="15" fill="rgb(242,21,14)" fg:x="6079" fg:w="1"/><text x="86.4281%" y="2063.50"></text></g><g><title>std::path::Path::parent (1 samples, 0.01%)</title><rect x="86.1922%" y="2053" width="0.0142%" height="15" fill="rgb(222,19,48)" fg:x="6080" fg:w="1"/><text x="86.4422%" y="2063.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (2 samples, 0.03%)</title><rect x="86.2064%" y="2053" width="0.0284%" height="15" fill="rgb(232,45,27)" fg:x="6081" fg:w="2"/><text x="86.4564%" y="2063.50"></text></g><g><title>std::sync::mpmc::counter::Receiver&lt;C&gt;::release (1 samples, 0.01%)</title><rect x="86.2348%" y="2053" width="0.0142%" height="15" fill="rgb(249,103,42)" fg:x="6083" fg:w="1"/><text x="86.4848%" y="2063.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv (3 samples, 0.04%)</title><rect x="86.2489%" y="2053" width="0.0425%" height="15" fill="rgb(246,81,33)" fg:x="6084" fg:w="3"/><text x="86.4989%" y="2063.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv::_{{closure}} (3 samples, 0.04%)</title><rect x="86.2915%" y="2053" width="0.0425%" height="15" fill="rgb(252,33,42)" fg:x="6087" fg:w="3"/><text x="86.5415%" y="2063.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::send (5 samples, 0.07%)</title><rect x="86.3340%" y="2053" width="0.0709%" height="15" fill="rgb(209,212,41)" fg:x="6090" fg:w="5"/><text x="86.5840%" y="2063.50"></text></g><g><title>std::sys::unix::fs::File::open_c (17 samples, 0.24%)</title><rect x="86.4049%" y="2053" width="0.2410%" height="15" fill="rgb(207,154,6)" fg:x="6095" fg:w="17"/><text x="86.6549%" y="2063.50"></text></g><g><title>std::sys::unix::fs::try_statx (9 samples, 0.13%)</title><rect x="86.6459%" y="2053" width="0.1276%" height="15" fill="rgb(223,64,47)" fg:x="6112" fg:w="9"/><text x="86.8959%" y="2063.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.01%)</title><rect x="86.7735%" y="2053" width="0.0142%" height="15" fill="rgb(211,161,38)" fg:x="6121" fg:w="1"/><text x="87.0235%" y="2063.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (152 samples, 2.15%)</title><rect x="86.7876%" y="2053" width="2.1548%" height="15" fill="rgb(219,138,40)" fg:x="6122" fg:w="152"/><text x="87.0376%" y="2063.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (75 samples, 1.06%)</title><rect x="88.9424%" y="2053" width="1.0632%" height="15" fill="rgb(241,228,46)" fg:x="6274" fg:w="75"/><text x="89.1924%" y="2063.50"></text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.03%)</title><rect x="90.0057%" y="2053" width="0.0284%" height="15" fill="rgb(223,209,38)" fg:x="6349" fg:w="2"/><text x="90.2557%" y="2063.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (553 samples, 7.84%)</title><rect x="90.0340%" y="2053" width="7.8395%" height="15" fill="rgb(236,164,45)" fg:x="6351" fg:w="553"/><text x="90.2840%" y="2063.50">std::sys_co..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="97.8594%" y="2037" width="0.0142%" height="15" fill="rgb(231,15,5)" fg:x="6903" fg:w="1"/><text x="98.1094%" y="2047.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit::destroy (4 samples, 0.06%)</title><rect x="97.8735%" y="2053" width="0.0567%" height="15" fill="rgb(252,35,15)" fg:x="6904" fg:w="4"/><text x="98.1235%" y="2063.50"></text></g><g><title>std::sys_common::thread_info::set (15 samples, 0.21%)</title><rect x="97.9303%" y="2053" width="0.2126%" height="15" fill="rgb(248,181,18)" fg:x="6908" fg:w="15"/><text x="98.1803%" y="2063.50"></text></g><g><title>std::thread::Thread::cname (10 samples, 0.14%)</title><rect x="98.1429%" y="2053" width="0.1418%" height="15" fill="rgb(233,39,42)" fg:x="6923" fg:w="10"/><text x="98.3929%" y="2063.50"></text></g><g><title>std::thread::park (14 samples, 0.20%)</title><rect x="98.2847%" y="2053" width="0.1985%" height="15" fill="rgb(238,110,33)" fg:x="6933" fg:w="14"/><text x="98.5347%" y="2063.50"></text></g><g><title>syscall (98 samples, 1.39%)</title><rect x="98.4831%" y="2053" width="1.3893%" height="15" fill="rgb(233,195,10)" fg:x="6947" fg:w="98"/><text x="98.7331%" y="2063.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="99.8299%" y="2037" width="0.0425%" height="15" fill="rgb(254,105,3)" fg:x="7042" fg:w="3"/><text x="100.0799%" y="2047.50"></text></g><g><title>tcache_init.part.0 (7 samples, 0.10%)</title><rect x="99.8724%" y="2053" width="0.0992%" height="15" fill="rgb(221,225,9)" fg:x="7045" fg:w="7"/><text x="100.1224%" y="2063.50"></text></g><g><title>all (7,054 samples, 100%)</title><rect x="0.0000%" y="2085" width="100.0000%" height="15" fill="rgb(224,227,45)" fg:x="0" fg:w="7054"/><text x="0.2500%" y="2095.50"></text></g><g><title>keras-library (7,054 samples, 100.00%)</title><rect x="0.0000%" y="2069" width="100.0000%" height="15" fill="rgb(229,198,43)" fg:x="0" fg:w="7054"/><text x="0.2500%" y="2079.50">keras-library</text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.03%)</title><rect x="99.9716%" y="2053" width="0.0284%" height="15" fill="rgb(206,209,35)" fg:x="7052" fg:w="2"/><text x="100.2216%" y="2063.50"></text></g></svg></svg>